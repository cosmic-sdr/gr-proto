<block>
  <name>OpenCL High Pass Filter</name>
  <key>clenabled_clHighPassFilter</key>
  <category>[OpenCL-Accelerated]</category>
  <import>import clenabled</import>
  <import>from gnuradio.filter import firdes</import>
  <make>#if $devices == 1
  clenabled.clFilter($openCLPlatform,1,0,0,$decimation,firdes.high_pass(
	$gain, $samp_rate, $cutoff_freq, $width, $win, $beta),1,$setDebug,$use_time)
	#else
  clenabled.clFilter($openCLPlatform,$devices,$platformId,$deviceId,$decimation,firdes.high_pass(
	$gain, $samp_rate, $cutoff_freq, $width, $win, $beta),1,$setDebug,$use_time)
	#end if
	</make>
	
	<callback>set_taps2(clenabled.firdes.high_pass($gain, $samp_rate, $cutoff_freq, $width, $win, $beta))</callback>
	<param>
		<name>OpenCL Platform Type</name>
		<key>openCLPlatform</key>
		<type>enum</type>
		<option>
			<name>GPU</name>
			<key>1</key>
		</option>
		<option>
			<name>Accelerator</name>
			<key>2</key>
		</option>
		<option>
			<name>CPU</name>
			<key>3</key>
		</option>
		<option>
			<name>Any</name>
			<key>4</key>
		</option>
	</param>
	<param>
		<name>OpenCL Device</name>
		<key>devices</key>
		<type>enum</type>
		<option>
			<name>Any</name>
			<key>1</key>
			<opt>hide_specific:all</opt>
		</option>
		<option>
			<name>Specific</name>
			<key>2</key>
			<opt>hide_specific:</opt>
		</option>
	</param>
	<param>
		<name>Platform Id</name>
		<key>platformId</key>
		<type>enum</type>
		<hide>$devices.hide_specific</hide>
		<option>
			<name>0</name>
			<key>0</key>
		</option>
		<option>
			<name>1</name>
			<key>1</key>
		</option>
		<option>
			<name>2</name>
			<key>2</key>
		</option>
		<option>
			<name>3</name>
			<key>3</key>
		</option>
	</param>
	<param>
		<name>Device Id</name>
		<key>deviceId</key>
		<type>enum</type>
		<hide>$devices.hide_specific</hide>
		<option>
			<name>0</name>
			<key>0</key>
		</option>
		<option>
			<name>1</name>
			<key>1</key>
		</option>
		<option>
			<name>2</name>
			<key>2</key>
		</option>
		<option>
			<name>3</name>
			<key>3</key>
		</option>
	</param>
	<param>
		<name>Filter Type</name>
		<key>use_time</key>
		<type>enum</type>
		<option>
			<name>Time Domain (FIR)</name>
			<key>True</key>
		</option>
		<option>
			<name>Frequency Domain (FFT)</name>
			<key>False</key>
		</option>
	</param>
  <param>
    <name>Decimation</name>
    <key>decimation</key>
    <value>1</value>
    <type>int</type>
  </param>
	<param>
		<name>Gain</name>
		<key>gain</key>
		<value>1</value>
		<type>real</type>
	</param>
	<param>
		<name>Sample Rate</name>
		<key>samp_rate</key>
		<value>samp_rate</value>
		<type>real</type>
	</param>
	<param>
		<name>Cutoff Freq</name>
		<key>cutoff_freq</key>
		<type>real</type>
	</param>
	<param>
		<name>Transition Width</name>
		<key>width</key>
		<type>real</type>
	</param>
	<param>
		<name>Window</name>
		<key>win</key>
		<value>firdes.WIN_HAMMING</value>
		<type>int</type>
		<option>
			<name>Hamming</name>
			<key>firdes.WIN_HAMMING</key>
		</option>
		<option>
			<name>Blackman</name>
			<key>firdes.WIN_BLACKMAN</key>
		</option>
		<option>
			<name>Hann</name>
			<key>firdes.WIN_HANN</key>
		</option>
		<option>
			<name>Rectangular</name>
			<key>firdes.WIN_RECTANGULAR</key>
		</option>
		<option>
			<name>Kaiser</name>
			<key>firdes.WIN_KAISER</key>
		</option>
	</param>
	<param>
		<name>Beta</name>
		<key>beta</key>
		<value>6.76</value>
		<type>real</type>
	</param>
	<param>
		<name>Debug</name>
		<key>setDebug</key>
		<type>enum</type>
		<option>
			<name>Off</name>
			<key>0</key>
		</option>
		<option>
			<name>On</name>
			<key>1</key>
		</option>
	</param>
  <sink>
    <name>in</name>
    <type>complex</type>
  </sink>
  <source>
    <name>out</name>
    <type>complex</type>
  </source>
	<doc>
This filter is an OpenCL enabled version of the built-in high pass filter.

Sample rate, cutoff frequency, and transition width are in Hertz.

The beta paramater only applies to the Kaiser window.

Filter performance based on the number of taps can be tested with the test-clfilter command-line tool.  In gerneral what you will find in terms of filter performance is that filters will perform in this order (highest to lowest throughput):

1. GNURadio FFT Filter, 2. OpenCL FIR Filter

Then depending on the number of taps, either the GNURadio FIR or OpenCL FFT filter.	Again use the included test-clfilter command-line tool to select the best performing filter.
</doc>
</block>
