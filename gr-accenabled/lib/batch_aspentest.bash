#! /bin/bash

sweep_list=( )
sweep_begin=64
sweep_stride=2
#sweep_end=134217728
sweep_end=256
benchname="clLog"
device="p100"

function usage()
{
    echo "./${benchmark}_aspengen.bash"
    echo "List of options:"
    echo -e "\t-h --help"
    echo -e "\t-p=name --program=name (default: ${benchname})"
    echo -e "\t-sl=sweep_list --sweep_list=sweep_list"
    echo -e "\t\t(sweep_list is a comma-separated list)"
    echo -e "\t\t(if specified, sb, ss, se options are ignored)"
    echo -e "\t-sb=sweep_begin --sweep_begin=sweep_begin"
    echo -e "\t\t(default sweep_begin: 64)"
    echo -e "\t-ss=sweep_stride --sweep_stride=sweep_stride"
    echo -e "\t\t(default sweep_stride: 2)"
    echo -e "\t-se=sweep_end --sweep_end=sweep_end"
    echo -e "\t\t(default sweep_end: 64)"

    echo ""
}

while [ "$1" != "" ]; do
    PARAM=`echo $1 | awk -F= '{print $1}'`
    VALUE=`echo $1 | awk -F= '{print $2}'`
    case $PARAM in
        -h | --help)
            usage
            exit
            ;;
        -p | --program)
            benchname=${VALUE}
            ;;
        -sl | --sweep_list)
            IFS=',' read -r -a sweep_list <<< "$VALUE"
            echo "Sweep List: ${sweep_list[@]}"
            ;;
        -sb | --sweep_begin)
            sweep_begin=$VALUE
            echo "Sweep Begin: $sweep_begin"
            ;;
        -ss | --sweep_stride)
            sweep_stride=$VALUE
            echo "Sweep Stride: $sweep_stride"
            ;;
        -se | --sweep_end)
            sweep_end=$VALUE
            echo "Sweep End: $sweep_end"
            ;;
        *)
            echo "ERROR: unknown parameter \"$PARAM\""
            usage
            exit 1
            ;;
    esac
    shift
done

sweep_list_size=${#sweep_list[@]}
if [ ${sweep_list_size} -eq 0 ]; then
    i=$sweep_begin
    while [ $i -le $sweep_end ]
    do
        sweep_list=( "${sweep_list[@]}" "$i" )
    i=$((i*${sweep_stride}))
    done
    sweepString="Sweep_range = ${sweep_begin}:${sweep_stride}:${sweep_end}"
    sweepString2="SweepRange_${sweep_begin}_${sweep_stride}_${sweep_end}"
else
    sweepString="Sweep_list = "
    sweepString2="SweepList_"
    for i in ${sweep_list[@]}
    do
        sweepString="${sweepString} $i"
        sweepString2="${sweepString2}_$i"
    done
    sweep_begin="${sweep_list[0]}"
    sweep_list_size=$((sweep_list_size-1))
    sweep_end="${sweep_list[$sweep_list_size]}"
fi

logFileP="${benchname}_${sweepString2}.aspenlog"
date | tee ${logFileP}

for inputData in ${sweep_list[@]}
do
	echo "# ${sweepString2}" | tee -a ${logFileP}
	echo "# Sweep = ${inputData}" | tee -a ${logFileP}
	if [ -f ${benchname}_template.aspen ]; then
		cat "${benchname}_template.aspen" | sed "s|_inputSize_|${inputData}|" > "${benchname}.aspen"
	else
		"${benchname}_aspengen.bash" -i=${inputData}
	fi
	${aspen}/test/bigtest ${benchname}.aspen ${aspen}/models/machine/2cpu1gpu_${device}.aspen 2>&1 | tee -a ${logFileP}
done
cp ${logFileP} "${benchname}_rsc_predicted.aspenlog"
perl ./extractASPENResults.pl ${benchname} ${sweep_begin} ${sweep_stride} ${sweep_end}
rm "${benchname}_rsc_predicted.aspenlog"
